#pragma once
#include <vector>
#include <string>

/** @brief マップの基底クラス */
class BaseMap {
public:
    /**
     * @brief コンストラクタ
     * @param (datFilePath) datファイルパス
     * @details タイルセット画像の読込処理はここで行っている。
     */
    BaseMap(std::string datFilePath);

    /**
     * @brief マップの描画処理
     */
    void draw();

private:
    /** @brief datファイルパス */
    std::string m_datFilePath;

    /** @brief タイルセットファイルパス */
    std::string m_tilesetFilePath;

    /** @brief タイルセットハンドル */
    std::vector<int> m_tilesetHandle;

    /** @brief タイルサイズ（x軸方向） */
    int m_tileSizeX;

    /** @brief タイルサイズ（y軸方向） */
    int m_tileSizeY;

    /** @brief タイル分割数（x軸方向） */
    int m_tileNumX;

    /** @brief タイル分割数（y軸方向） */
    int m_tileNumY;

    /** @brief マップサイズ（x軸方向） */
    int m_mapSizeX;

    /** @brief マップサイズ（y軸方向） */
    int m_mapSizeY;

    /** @brief マップデータ（１マスごとに指定されるタイルIDのリスト） */
    std::vector<int> m_mapData;

    /**
     * @brief 通行設定（１マスごとに指定される通行設定）
     * @details 通行設定は4ビットで表現する。
     * @details 1ビット目から上、右、下、左の通行設定で、0：通行可、1：通行不可。
     * @details 例）0000：全方向通行可、1100：上と右のみ通行可、1111：全方向通行不可
     */
    std::vector<unsigned int> m_passData;

    /**
     * @brief マップデータの読込処理
     * @param (datFilePath) datファイルパス
     */
    void loadMapData();
};